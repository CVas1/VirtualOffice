// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#nullable enable

using System;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteReducers : RemoteBase
    {
        public delegate void AddEntityHandler(ReducerEventContext ctx, uint roomId, string prefabId, DbVector3 pos, DbVector3 rot, DbVector3 scale);
        public event AddEntityHandler? OnAddEntity;

        public void AddEntity(uint roomId, string prefabId, DbVector3 pos, DbVector3 rot, DbVector3 scale)
        {
            conn.InternalCallReducer(new Reducer.AddEntity(roomId, prefabId, pos, rot, scale), this.SetCallReducerFlags.AddEntityFlags);
        }

        public bool InvokeAddEntity(ReducerEventContext ctx, Reducer.AddEntity args)
        {
            if (OnAddEntity == null) return false;
            OnAddEntity(
                ctx,
                args.RoomId,
                args.PrefabId,
                args.Pos,
                args.Rot,
                args.Scale
            );
            return true;
        }
    }

    public abstract partial class Reducer
    {
        [SpacetimeDB.Type]
        [DataContract]
        public sealed partial class AddEntity : Reducer, IReducerArgs
        {
            [DataMember(Name = "room_id")]
            public uint RoomId;
            [DataMember(Name = "prefab_id")]
            public string PrefabId;
            [DataMember(Name = "pos")]
            public DbVector3 Pos;
            [DataMember(Name = "rot")]
            public DbVector3 Rot;
            [DataMember(Name = "scale")]
            public DbVector3 Scale;

            public AddEntity(
                uint RoomId,
                string PrefabId,
                DbVector3 Pos,
                DbVector3 Rot,
                DbVector3 Scale
            )
            {
                this.RoomId = RoomId;
                this.PrefabId = PrefabId;
                this.Pos = Pos;
                this.Rot = Rot;
                this.Scale = Scale;
            }

            public AddEntity()
            {
                this.PrefabId = "";
                this.Pos = new();
                this.Rot = new();
                this.Scale = new();
            }

            string IReducerArgs.ReducerName => "AddEntity";
        }
    }

    public sealed partial class SetReducerFlags
    {
        internal CallReducerFlags AddEntityFlags;
        public void AddEntity(CallReducerFlags flags) => AddEntityFlags = flags;
    }
}
