// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#nullable enable

using System;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteReducers : RemoteBase
    {
        public delegate void UpdateLastPositionHandler(ReducerEventContext ctx, DbVector3 position, float rotation);
        public event UpdateLastPositionHandler? OnUpdateLastPosition;

        public void UpdateLastPosition(DbVector3 position, float rotation)
        {
            conn.InternalCallReducer(new Reducer.UpdateLastPosition(position, rotation), this.SetCallReducerFlags.UpdateLastPositionFlags);
        }

        public bool InvokeUpdateLastPosition(ReducerEventContext ctx, Reducer.UpdateLastPosition args)
        {
            if (OnUpdateLastPosition == null) return false;
            OnUpdateLastPosition(
                ctx,
                args.Position,
                args.Rotation
            );
            return true;
        }
    }

    public abstract partial class Reducer
    {
        [SpacetimeDB.Type]
        [DataContract]
        public sealed partial class UpdateLastPosition : Reducer, IReducerArgs
        {
            [DataMember(Name = "position")]
            public DbVector3 Position;
            [DataMember(Name = "rotation")]
            public float Rotation;

            public UpdateLastPosition(
                DbVector3 Position,
                float Rotation
            )
            {
                this.Position = Position;
                this.Rotation = Rotation;
            }

            public UpdateLastPosition()
            {
                this.Position = new();
            }

            string IReducerArgs.ReducerName => "UpdateLastPosition";
        }
    }

    public sealed partial class SetReducerFlags
    {
        internal CallReducerFlags UpdateLastPositionFlags;
        public void UpdateLastPosition(CallReducerFlags flags) => UpdateLastPositionFlags = flags;
    }
}
